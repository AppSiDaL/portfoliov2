---
import { Code } from "astro:components";
import { Image } from "astro:assets";

const text = `const AppSiDaL = {
  age: 21,
  spokenLanguages: ["Spanish", "English"],
  location: "Mexico",
  email: "davalosng@gmail.com",
  graduatedAs: "Sistems Engineer",
  graduatedAt: "TESJo",
};
/* Try to change the theme.
Click on the rtrn str. */
const Theme = (() => {
  return "Dark";
});
`;
---

<div class="relative rounded-lg shadow-lg max-w-full min-w-full">
  <Code
    code={text}
    lang="js"
    class="w-auto h-max mt-0 mb-0 bg-slate-600"
    id="code"
    theme="github-light"
  />
  <div class="absolute bottom-0 right-0 m-4">
    <Image
      src="/gitProfile.webp"
      alt="GitHub Avatar"
      width={200}
      height={200}
      class="rounded-full h-[150px] w-[150px] md:h-[200px] md:w-[200px]"
    />
  </div>
  <div class="absolute top-0 right-0 m-4">
    <i class="devicon-github-original text-black dark:text-white text-4xl"></i>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const codeText = document.querySelector("code");
    const theme = localStorage.getItem("theme");
    if (theme === "dark") {
      changeCodeTheme("dark");
      changeIconsColor("dark");
      changeContributionColors("dark");
    }
    if (!codeText) return;

    codeText.innerHTML = codeText.innerHTML.replace(
      "Dark",
      `<span id="dark-mode-toggle">${theme === "dark" ? "Light" : "Dark"}</span>`
    );

    const darkModeToggle = document.getElementById("dark-mode-toggle");
    if (!darkModeToggle) return;

    darkModeToggle.addEventListener("click", handleClick);

    darkModeToggle.addEventListener("mouseover", () => {
      darkModeToggle.style.cursor = "pointer";
      darkModeToggle.style.textDecoration = "underline";
    });
    darkModeToggle.addEventListener("mouseout", () => {
      darkModeToggle.style.textDecoration = "none";
    });
  });

  function handleClick(event: MouseEvent) {
    const target = event.target as HTMLElement;
    if (!target) return;
    const theme = target.innerText;
    const codeComponent = document.getElementById("code");
    if (!codeComponent) return;

    if (theme === "Dark") {
      localStorage.theme = "dark";
      document.documentElement.classList.add("dark");
      changeCodeTheme("dark");
      changeIconsColor("dark");
      changeContributionColors("dark");
      target.innerText = "Light";
    } else {
      localStorage.theme = "light";
      document.documentElement.classList.remove("dark");
      changeCodeTheme("light");
      changeIconsColor("light");
      changeContributionColors("light");
      target.innerText = "Dark";
    }
  }

  function changeCodeTheme(theme: string) {
    const darkbg = "#24292e";
    const lightbg = "#fff";
    const darkColors: { [key: string]: string } = {
      "rgb(203, 118, 118)": "#F97583",
      "rgb(0, 92, 197)": "#79B8FF",
      "rgb(36, 41, 46)": "#E1E4E8",
      "rgb(3, 47, 98)": "#9ECBFF",
    };

    const lightColors: { [key: string]: string } = {
      "rgb(249, 117, 131)": "#CB7676", // #CB7676 const
      "rgb(121, 184, 255)": "#005CC5", // #005CC5 name
      "rgb(225, 228, 232)": "#24292E", // #24292E brackets
      "rgb(158, 203, 255)": "#032F62", // #032F62 string
    };
    const preElement = document.querySelector("#code");
    if (preElement) {
      (preElement as HTMLElement).style.backgroundColor =
        theme === "dark" ? darkbg : lightbg;
    }
    const spans = document.querySelectorAll("#code span");
    spans.forEach((span) => {
      const currentColor = (span as HTMLElement).style.color;
      if (theme === "dark" && darkColors[currentColor]) {
        (span as HTMLElement).style.color = darkColors[currentColor];
      } else if (theme === "light" && lightColors[currentColor]) {
        (span as HTMLElement).style.color = lightColors[currentColor];
      }
    });
  }

  function changeIconsColor(theme: string) {
    const expressIcon = document.querySelector("#Express");
    const djangoIcon = document.querySelector("#Django");

    if (expressIcon && djangoIcon) {
      if (theme === "dark") {
        (djangoIcon as HTMLElement).style.color = "#fff";
        (expressIcon as HTMLElement).style.color = "#fff";
      } else {
        (djangoIcon as HTMLElement).style.color = "#000";
        (expressIcon as HTMLElement).style.color = "#000";
      }
    }
  }

  function changeContributionColors(theme: string) {
    const githubDark: { [key: string]: string } = {
      "rgb(33, 110, 57)": "#27d545",
      "rgb(48, 161, 78)": "#10983d",
      "rgb(64, 196, 99)": "#00602d",
      "rgb(155, 233, 168)": "#003820",
      "rgb(235, 237, 240)": "#161b22",
    };

    const lightColor: { [key: string]: string } = {
      "rgb(39, 213, 69)": "#216e39",
      "rgb(16, 152, 61)": "#30a14e",
      "rgb(0, 96, 45)": "#40c463",
      "rgb(0, 56, 32)": "#9be9a8",
      "rgb(22, 27, 34)": "#ebedf0",
    };

    const days = document.querySelectorAll("[id^='week-']");
    days.forEach((day) => {
      const dayElement = day as HTMLElement;
      const currentColor = getComputedStyle(dayElement).backgroundColor;
      console.log(currentColor);
      const finalColor =
        theme === "dark" ? githubDark[currentColor] : lightColor[currentColor];
      dayElement.style.backgroundColor = finalColor;
    });
  }
</script>
