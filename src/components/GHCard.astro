---
import CodeHeader from "./CodeHeader.astro";
import GitCalendarAstro from "./GitCalendar.astro";
import GithubService from "../services/GithubGraph";

const { data } = await GithubService.getUser(
  import.meta.env.PUBLIC_GITHUB_TOKEN, // token in .env file
  "AppSiDaL" // your GitHub account name
).catch((err) => {
  return {
    bio: "adasd",
    login: "AppSiDaL",
    avatar_url: "https://avatars.githubusercontent.com/u/112730350?v=4",
    name: "asdasd",
  };
});

const { repositoryOwner } = data;
const { avatarUrl, name, login, bio } = repositoryOwner;

const links = [
  {
    name: "GitHub",
    url: "https://github.com/AppSiDaL",
    icon: "github",
    color: "text-black dark:text-white",
  },
  {
    name: "LinkedIn",
    url: "https://www.linkedin.com/in/gilberto-davalos-nava-827255271/",
    icon: "linkedin",
    color: "",
  },
];
---

<div class="ml-4 rounded-lg bg-gray-100 dark:bg-zinc-800">
  <div
    class="relative w-full h-full bg-cover bg-center flex flex-col items-center justify-center"
  >
    <CodeHeader avatarURL={avatarUrl} />
    <h1 class="mt-4 text-3xl font-bold">{name}</h1>
    <h2 class="text-xl">{login}</h2>
    <h2 class="mt-2 text-lg">
      {bio}
    </h2>
    <GitCalendarAstro />
    <div class="flex flex-row items-center justify-center space-x-4 mt-4">
      {
        links.map((link) => (
          <a
            href={link.url}
            target="_blank"
            rel="noopener noreferrer"
            class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300"
          >
            <span class="sr-only">{link.name}</span>
            <i
              id={link.icon}
              class={`devicon-${link.icon}-plain ${link.color} colored text-4xl`}
            />
          </a>
        ))
      }
    </div>
    <a
      class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300"
    >
      <span class="">davalosng@gmail.com</span>
    </a>
  </div>
</div>
