<section>
  <div
    class="flex flex-col items-center justify-center border border-gray-200 rounded-lg p-1"
  >
    <div id="contributions" class="flex gap-[1px]">
      {
        Array.apply(null, Array(53)).map((week, i) => {
          return (
            <div
              id={`week-${i}`}
              class={`flex-col gap-[1px] ${i < 20 ? "hidden md:flex" : "flex"}`}
            >
              {Array.apply(null, Array(7)).map((day, j) => {
                return (
                  <div
                    id={`week-${i}-day-${j}`}
                    class="h-2 w-2 lg:h-2 lg:w-2 dark:bg-[#101217] bg-[#ebedf0]"
                  />
                );
              })}
            </div>
          );
        })
      }
    </div>
    <p class="my-1 hidden" id="contribution-error">
      Ooops, error fetching from GitHub.
    </p>
  </div>
</section>
<script>
  /**
   * Types for our data
   */
  type ContributionDay = {
    color: string;
    contributionCount: number;
    date: string;
    weekday: number;
  };
  type Week = {
    contributionDays: ContributionDay[];
    firstDay: string;
  };
  type Weeks = Week[];
  type GraphQLRes = {
    user: {
      contributionsCollection: {
        contributionCalendar: {
          weeks: Weeks;
        };
      };
    };
  };

  /**
   * Fetch against GitHub GraphQL API
   */
  import GithubService from "../services/GithubGraph";

  /**
   * Run fetch from above
   */
  const { data } = await GithubService.getContributions(
    import.meta.env.PUBLIC_GITHUB_TOKEN, // token in .env file
    "AppSiDaL" // your GitHub account name
  );

  /**
   * If there's an error with the fetch or the user doesn't exist, show error text
   */
  if (!data || !data.user) {
    const oops = document.getElementById("contribution-error");
    oops?.classList.remove("hidden");
    throw "Error fetching from Github";
  }

  /**
   * Drill down to data from fetch request
   */
  const {
    user: {
      contributionsCollection: {
        contributionCalendar: { weeks },
      },
    },
  }: GraphQLRes = data;

  /**
   * Loop through the weeks + add them to the parent div
   */
  const githubDark = {
    "#216e39": "#27d545",
    "#30a14e": "#10983d",
    "#40c463": "#00602d",
    "#9be9a8": "#003820",
    "#ebedf0": "#161b22",
  };
  const theme = localStorage.getItem("theme");
  weeks.forEach(({ contributionDays }, i) => {
    // Loop through each week's days + add them to their week
    contributionDays.forEach(({ color, date, contributionCount }, j) => {
      // Get + update each day square
      const dayDiv = document.getElementById(`week-${i}-day-${j}`);
      const finalColor =
        theme === "dark" ? githubDark[color as keyof typeof githubDark] : color;
      if (color === "#216e39") {
        console.log("adads");
      }
      dayDiv?.setAttribute("style", `background-color: ${finalColor}`);
      dayDiv?.setAttribute(
        "title",
        `${date} - ${contributionCount} public commits`
      );
    });
  });
</script>
